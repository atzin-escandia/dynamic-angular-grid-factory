{"ast":null,"code":"var _class;\nimport { EventEmitter, ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"ContainerFactory\"];\nexport class TableGridComponent {\n  constructor() {\n    this.eventDataEmitter = new EventEmitter();\n    this.componentRefs = [];\n  }\n  ngAfterViewInit() {\n    if (this.containerRef) {\n      this.data.forEach((item, i) => this.createComponent(item, i));\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes) {\n      this.componentRefs.forEach((compRef, i) => this.reassignModifiedData(compRef, i));\n    }\n  }\n  // This object reassign is for Angular @inputs to detect that the object has changed\n  reassignModifiedData(componentRef, index) {\n    Object.assign(componentRef.instance, this.data[index]);\n  }\n  createComponent(data, index) {\n    const componentRef = this.containerRef.createComponent(this.component);\n    this.componentRefs.push(componentRef);\n    this.styles.forEach(style => componentRef.location.nativeElement.classList.add(style));\n    Object.assign(componentRef.instance, data);\n    Object.keys(componentRef.instance).forEach(key => {\n      if (componentRef.instance[key] instanceof EventEmitter) {\n        componentRef.instance[key].subscribe(eventData => {\n          this.eventDataEmitter.emit({\n            eventData,\n            key,\n            index\n          });\n          this.reassignModifiedData(componentRef, index);\n        });\n      }\n    });\n  }\n}\n_class = TableGridComponent;\n_class.ɵfac = function TableGridComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"table-grid-component\"]],\n  viewQuery: function TableGridComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerRef = _t.first);\n    }\n  },\n  inputs: {\n    component: \"component\",\n    data: \"data\",\n    modifyItem: \"modifyItem\",\n    events: \"events\",\n    styles: \"styles\"\n  },\n  outputs: {\n    eventDataEmitter: \"eventDataEmitter\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[\"ContainerFactory\", \"\"]],\n  template: function TableGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, null, 0);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["EventEmitter","ViewContainerRef","TableGridComponent","constructor","eventDataEmitter","componentRefs","ngAfterViewInit","containerRef","data","forEach","item","i","createComponent","ngOnChanges","changes","compRef","reassignModifiedData","componentRef","index","Object","assign","instance","component","push","styles","style","location","nativeElement","classList","add","keys","key","subscribe","eventData","emit","selectors","viewQuery","TableGridComponent_Query","rf","ctx","i0","ɵɵelementContainer"],"sources":["/Users/atzinescandia/Documents/projects/small-projects/dynamic-grid-angular/src/app/table-grid/table-grid.component.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'table-grid-component',\n  template: `\n    <ng-container #ContainerFactory></ng-container>\n  `,\n})\nexport class TableGridComponent implements AfterViewInit, OnChanges {\n  @ViewChild('ContainerFactory', { read: ViewContainerRef }) containerRef;\n  @Input() component: any;\n  @Input() data: any[] | undefined;\n  @Input() modifyItem: any;\n  @Input() events: any[] | undefined;\n  @Input() styles: string[] | undefined;\n  @Output() eventDataEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  componentRef: any;\n  componentRefs: any[] = [];\n\n  ngAfterViewInit(): void {\n    if (this.containerRef) {\n      this.data.forEach((item, i) => this.createComponent(item, i));\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      this.componentRefs.forEach((compRef, i) => this.reassignModifiedData(compRef, i));\n    }\n  }\n\n  // This object reassign is for Angular @inputs to detect that the object has changed\n  reassignModifiedData(componentRef: any, index: number): void {\n    Object.assign(componentRef.instance, this.data[index]);\n  }\n\n  createComponent(data: any, index: number): void {\n    const componentRef = this.containerRef.createComponent(this.component);\n\n    this.componentRefs.push(componentRef);\n    this.styles.forEach((style) => componentRef.location.nativeElement.classList.add(style));\n    Object.assign(componentRef.instance, data);\n\n    Object.keys(componentRef.instance).forEach((key: any) => {\n      if (componentRef.instance[key] instanceof EventEmitter) {\n        componentRef.instance[key].subscribe((eventData: any) => {\n          this.eventDataEmitter.emit({ eventData, key, index });\n          this.reassignModifiedData(componentRef, index);\n        });\n      }\n    });\n  }\n}\n"],"mappings":";AAAA,SAIEA,YAAY,EAMZC,gBAAgB,QACX,eAAe;;;AAQtB,OAAM,MAAOC,kBAAkB;EAN/BC,YAAA;IAaY,KAAAC,gBAAgB,GAAsB,IAAIJ,YAAY,EAAO;IAGvE,KAAAK,aAAa,GAAU,EAAE;;EAEzBC,eAAeA,CAAA;IACb,IAAI,IAAI,CAACC,YAAY,EAAE;MACrB,IAAI,CAACC,IAAI,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK,IAAI,CAACC,eAAe,CAACF,IAAI,EAAEC,CAAC,CAAC,CAAC;;EAEjE;EAEAE,WAAWA,CAACC,OAAsB;IAChC,IAAIA,OAAO,EAAE;MACX,IAAI,CAACT,aAAa,CAACI,OAAO,CAAC,CAACM,OAAO,EAAEJ,CAAC,KAAK,IAAI,CAACK,oBAAoB,CAACD,OAAO,EAAEJ,CAAC,CAAC,CAAC;;EAErF;EAEA;EACAK,oBAAoBA,CAACC,YAAiB,EAAEC,KAAa;IACnDC,MAAM,CAACC,MAAM,CAACH,YAAY,CAACI,QAAQ,EAAE,IAAI,CAACb,IAAI,CAACU,KAAK,CAAC,CAAC;EACxD;EAEAN,eAAeA,CAACJ,IAAS,EAAEU,KAAa;IACtC,MAAMD,YAAY,GAAG,IAAI,CAACV,YAAY,CAACK,eAAe,CAAC,IAAI,CAACU,SAAS,CAAC;IAEtE,IAAI,CAACjB,aAAa,CAACkB,IAAI,CAACN,YAAY,CAAC;IACrC,IAAI,CAACO,MAAM,CAACf,OAAO,CAAEgB,KAAK,IAAKR,YAAY,CAACS,QAAQ,CAACC,aAAa,CAACC,SAAS,CAACC,GAAG,CAACJ,KAAK,CAAC,CAAC;IACxFN,MAAM,CAACC,MAAM,CAACH,YAAY,CAACI,QAAQ,EAAEb,IAAI,CAAC;IAE1CW,MAAM,CAACW,IAAI,CAACb,YAAY,CAACI,QAAQ,CAAC,CAACZ,OAAO,CAAEsB,GAAQ,IAAI;MACtD,IAAId,YAAY,CAACI,QAAQ,CAACU,GAAG,CAAC,YAAY/B,YAAY,EAAE;QACtDiB,YAAY,CAACI,QAAQ,CAACU,GAAG,CAAC,CAACC,SAAS,CAAEC,SAAc,IAAI;UACtD,IAAI,CAAC7B,gBAAgB,CAAC8B,IAAI,CAAC;YAAED,SAAS;YAAEF,GAAG;YAAEb;UAAK,CAAE,CAAC;UACrD,IAAI,CAACF,oBAAoB,CAACC,YAAY,EAAEC,KAAK,CAAC;QAChD,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;;SA5CWhB,kBAAkB;;mBAAlBA,MAAkB;AAAA;;QAAlBA,MAAkB;EAAAiC,SAAA;EAAAC,SAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;6BACUrC,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;MAJrDuC,EAAA,CAAAC,kBAAA,YAA+C"},"metadata":{},"sourceType":"module","externalDependencies":[]}